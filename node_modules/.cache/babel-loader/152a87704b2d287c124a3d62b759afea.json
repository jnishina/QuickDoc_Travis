{"ast":null,"code":"import _defineProperty from \"/Users/jordanmitsutakanishina/Documents/GitHub/QuickDoc_Travis/quick_doc/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport * as tslib_1 from \"tslib\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { Checkbox } from \"./checkbox\";\nimport { Radio } from \"./radio\";\nexport var LABEL_DEFAULTS = {\n  sizes: [\"small\", \"medium\", \"large\"]\n};\n\nvar identifyLabelDiscriminator = function identifyLabelDiscriminator(children) {\n  var discriminator = \"label\";\n  React.Children.forEach(children, function (child, i) {\n    if (typeof child === \"object\" && child !== null && \"type\" in child) {\n      if (child.type === Checkbox || child.type === \"input\" && child.props.type === \"checkbox\") {\n        discriminator = \"checkbox\";\n      } else if (child.type === Radio || child.type === \"input\" && child.props.type === \"radio\") {\n        discriminator = \"radio\";\n      } else if (child.type === React.Fragment) {\n        discriminator = identifyLabelDiscriminator(child.props.children);\n      }\n    }\n  });\n  return discriminator;\n};\n\nexport var Label = forwardRefAs(function (_a, ref) {\n  var _classNames;\n\n  var className = _a.className,\n      disabled = _a.disabled,\n      size = _a.size,\n      rest = tslib_1.__rest(_a, [\"className\", \"disabled\", \"size\"]);\n\n  var discriminator = identifyLabelDiscriminator(rest.children);\n  return React.createElement(Generic, Object.assign({\n    className: classNames((_classNames = {}, _defineProperty(_classNames, \"\".concat(discriminator), discriminator), _defineProperty(_classNames, \"is-disabled\", disabled), _defineProperty(_classNames, \"is-\".concat(size), size), _classNames), className),\n    ref: ref\n  }, rest));\n}, {\n  as: \"label\"\n});\nLabel.displayName = \"Label\";\nLabel.propTypes = {\n  disabled: PropTypes.bool,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};","map":null,"metadata":{},"sourceType":"module"}