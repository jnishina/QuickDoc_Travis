{"ast":null,"code":"import _defineProperty from \"/Users/jordanmitsutakanishina/Documents/GitHub/QuickDoc_Travis/quick_doc/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"/Users/jordanmitsutakanishina/Documents/GitHub/QuickDoc_Travis/quick_doc/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport * as tslib_1 from \"tslib\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { makePropTypesFactory, makeValidatingTransformFactory } from \"./factory\";\nexport var makePropTypes = makePropTypesFactory(function (vars) {\n  return {\n    backgroundColor: PropTypes.oneOf([].concat(_toConsumableArray(vars.colors), _toConsumableArray(vars.shades))),\n    italic: PropTypes.bool,\n    textAlign: PropTypes.oneOf(vars.textAlignments),\n    textColor: PropTypes.oneOf([].concat(_toConsumableArray(vars.colors), _toConsumableArray(vars.shades))),\n    textSize: PropTypes.oneOf(vars.textSizes),\n    textTransform: PropTypes.oneOf(vars.textTransforms),\n    textWeight: PropTypes.oneOf(vars.textWeights)\n  };\n});\nexport var transform = function transform(props) {\n  var _classNames;\n\n  var backgroundColor = props.backgroundColor,\n      className = props.className,\n      italic = props.italic,\n      textAlign = props.textAlign,\n      textColor = props.textColor,\n      textSize = props.textSize,\n      textTransform = props.textTransform,\n      textWeight = props.textWeight,\n      rest = tslib_1.__rest(props, [\"backgroundColor\", \"className\", \"italic\", \"textAlign\", \"textColor\", \"textSize\", \"textTransform\", \"textWeight\"]);\n\n  return Object.assign({\n    className: classNames((_classNames = {}, _defineProperty(_classNames, \"has-background-\".concat(backgroundColor), backgroundColor), _defineProperty(_classNames, \"has-text-\".concat(textColor), textColor), _defineProperty(_classNames, \"is-italic\", italic), _defineProperty(_classNames, \"is-\".concat(textTransform), textTransform), _defineProperty(_classNames, \"has-text-\".concat(textAlign), textAlign), _defineProperty(_classNames, \"has-text-weight-\".concat(textWeight), textWeight), _defineProperty(_classNames, \"is-size-\".concat(textSize), textSize), _classNames), className)\n  }, rest);\n};\nexport var makeValidatingTransform = makeValidatingTransformFactory(makePropTypes, transform);","map":null,"metadata":{},"sourceType":"module"}