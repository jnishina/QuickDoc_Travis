{"ast":null,"code":"import _defineProperty from \"/Users/jordanmitsutakanishina/Documents/GitHub/QuickDoc_Travis/quick_doc/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport * as tslib_1 from \"tslib\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { ButtonGroup } from \"./button-group\";\nexport var BUTTON_DEFAULTS = {\n  sizes: [\"small\", \"normal\", \"medium\", \"large\"],\n  states: [\"hovered\", \"focused\", \"active\", \"loading\"]\n};\nvar propTypes = {\n  color: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  fullwidth: PropTypes.bool,\n  inverted: PropTypes.bool,\n  outlined: PropTypes.bool,\n  rounded: PropTypes.bool,\n  selected: PropTypes.bool,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  state: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  static: PropTypes.bool,\n  text: PropTypes.bool\n};\nexport var Button = Object.assign(forwardRefAs(function (_a, ref) {\n  var _classNames;\n\n  var className = _a.className,\n      color = _a.color,\n      fullwidth = _a.fullwidth,\n      inverted = _a.inverted,\n      outlined = _a.outlined,\n      rounded = _a.rounded,\n      selected = _a.selected,\n      size = _a.size,\n      state = _a.state,\n      isStatic = _a.static,\n      text = _a.text,\n      rest = tslib_1.__rest(_a, [\"className\", \"color\", \"fullwidth\", \"inverted\", \"outlined\", \"rounded\", \"selected\", \"size\", \"state\", \"static\", \"text\"]);\n\n  return React.createElement(Generic, Object.assign({\n    className: classNames(\"button\", (_classNames = {}, _defineProperty(_classNames, \"is-\".concat(color), color), _defineProperty(_classNames, \"is-fullwidth\", fullwidth), _defineProperty(_classNames, \"is-inverted\", inverted), _defineProperty(_classNames, \"is-outlined\", outlined), _defineProperty(_classNames, \"is-rounded\", rounded), _defineProperty(_classNames, \"is-selected\", selected), _defineProperty(_classNames, \"is-\".concat(size), size), _defineProperty(_classNames, \"is-\".concat(state), state), _defineProperty(_classNames, \"is-static\", isStatic), _defineProperty(_classNames, \"is-text\", text), _classNames), className),\n    ref: ref\n  }, rest));\n}, {\n  as: \"button\"\n}), {\n  Group: ButtonGroup\n});\nButton.displayName = \"Button\";\nButton.propTypes = propTypes;","map":null,"metadata":{},"sourceType":"module"}