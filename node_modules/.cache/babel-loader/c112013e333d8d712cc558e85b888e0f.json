{"ast":null,"code":"import * as tslib_1 from \"tslib\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { makePropTypesFactory, makeValidatingTransformFactory } from \"./factory\";\nexport var makePropTypes = makePropTypesFactory(function (vars) {\n  return {\n    marginless: PropTypes.bool,\n    paddingless: PropTypes.bool,\n    radiusless: PropTypes.bool,\n    relative: PropTypes.bool,\n    shadowless: PropTypes.bool,\n    unselectable: PropTypes.bool\n  };\n});\nexport var transform = function transform(props) {\n  var className = props.className,\n      marginless = props.marginless,\n      paddingless = props.paddingless,\n      radiusless = props.radiusless,\n      relative = props.relative,\n      shadowless = props.shadowless,\n      unselectable = props.unselectable,\n      rest = tslib_1.__rest(props, [\"className\", \"marginless\", \"paddingless\", \"radiusless\", \"relative\", \"shadowless\", \"unselectable\"]);\n\n  return Object.assign({\n    className: classNames({\n      \"is-marginless\": marginless,\n      \"is-paddingless\": paddingless,\n      \"is-radiusless\": radiusless,\n      \"is-relative\": relative,\n      \"is-shadowless\": shadowless,\n      \"is-unselectable\": unselectable\n    }, className)\n  }, rest);\n};\nexport var makeValidatingTransform = makeValidatingTransformFactory(makePropTypes, transform);","map":null,"metadata":{},"sourceType":"module"}