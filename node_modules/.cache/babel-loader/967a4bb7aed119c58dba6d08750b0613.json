{"ast":null,"code":"import _defineProperty from \"/Users/jordanmitsutakanishina/Documents/GitHub/QuickDoc_Travis/quick_doc/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport * as tslib_1 from \"tslib\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { TagGroup } from \"./tag-group\";\nexport var TAG_DEFAULTS = {\n  sizes: [\"normal\", \"medium\", \"large\"]\n};\nexport var Tag = Object.assign(forwardRefAs(function (_a, ref) {\n  var _classNames;\n\n  var children = _a.children,\n      className = _a.className,\n      color = _a.color,\n      isDelete = _a.delete,\n      rounded = _a.rounded,\n      size = _a.size,\n      rest = tslib_1.__rest(_a, [\"children\", \"className\", \"color\", \"delete\", \"rounded\", \"size\"]);\n\n  var allowedChildren = isDelete === true ? undefined : children;\n  return React.createElement(Generic, Object.assign({\n    className: classNames(\"tag\", (_classNames = {}, _defineProperty(_classNames, \"is-\".concat(size), size), _defineProperty(_classNames, \"is-\".concat(color), color), _defineProperty(_classNames, \"is-delete\", isDelete), _defineProperty(_classNames, \"is-rounded\", rounded), _classNames), className),\n    children: allowedChildren,\n    ref: ref\n  }, rest));\n}, {\n  as: \"span\"\n}), {\n  Group: TagGroup\n});\nTag.displayName = \"Tag\";\nTag.propTypes = {\n  color: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  delete: PropTypes.bool,\n  rounded: PropTypes.bool,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};","map":null,"metadata":{},"sourceType":"module"}