{"ast":null,"code":"import * as tslib_1 from \"tslib\";\nimport classNames from \"classnames\";\nimport React from \"react\";\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { Delete } from \"../../elements\";\nimport { ModalContext } from \"./modal-context\";\n\nvar mapChildren = function mapChildren(children, close) {\n  return React.Children.map(children, function (child, i) {\n    if (typeof child === \"object\" && child !== null && \"type\" in child) {\n      if (child.type === Delete) {\n        var _onClick = child.props.onClick;\n        return React.cloneElement(child, {\n          onClick: function onClick(event) {\n            if (_onClick !== undefined) {\n              _onClick(event);\n            }\n\n            close();\n          }\n        });\n      } else if (child.type === React.Fragment) {\n        return React.createElement(React.Fragment, {\n          children: mapChildren(child.props.children, close)\n        });\n      }\n    }\n\n    return child;\n  });\n};\n\nexport var ModalCardHead = forwardRefAs(function (_a, ref) {\n  var className = _a.className,\n      children = _a.children,\n      rest = tslib_1.__rest(_a, [\"className\", \"children\"]);\n\n  return React.createElement(ModalContext.Consumer, null, function (_ref) {\n    var close = _ref.close;\n    return React.createElement(Generic, Object.assign({\n      children: mapChildren(children, close),\n      className: classNames(\"modal-card-head\", className),\n      ref: ref\n    }, rest));\n  });\n}, {\n  as: \"header\"\n});\nModalCardHead.displayName = \"Modal.Card.Head\";","map":null,"metadata":{},"sourceType":"module"}