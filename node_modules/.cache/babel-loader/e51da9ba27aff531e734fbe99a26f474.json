{"ast":null,"code":"import _defineProperty from \"/Users/jordanmitsutakanishina/Documents/GitHub/QuickDoc_Travis/quick_doc/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport * as tslib_1 from \"tslib\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { FieldBody } from \"./field-body\";\nimport { FieldLabel } from \"./field-label\";\nexport var FIELD_DEFAULTS = {\n  alignments: [\"centered\", \"right\"],\n  kinds: [\"addons\", \"group\"]\n};\nexport var Field = Object.assign(forwardRefAs(function (props, ref) {\n  var _classNames;\n\n  var align = props.align,\n      expanded = props.expanded,\n      horizontal = props.horizontal,\n      kind = props.kind,\n      multiline = props.multiline,\n      narrow = props.narrow,\n      rest = tslib_1.__rest(props, [\"align\", \"expanded\", \"horizontal\", \"kind\", \"multiline\", \"narrow\"]);\n\n  var k;\n\n  if (kind === \"addons\") {\n    k = \"has-addons\";\n  } else if (kind === \"group\") {\n    k = \"is-grouped\";\n  }\n\n  rest.className = classNames(\"field\", (_classNames = {}, _defineProperty(_classNames, \"\".concat(k), k), _defineProperty(_classNames, \"\".concat(k, \"-\").concat(align), k !== undefined && align !== undefined), _defineProperty(_classNames, \"\".concat(k, \"-multiline\"), k === \"is-grouped\" && multiline === true), _defineProperty(_classNames, \"is-expanded\", expanded), _defineProperty(_classNames, \"is-horizontal\", horizontal), _defineProperty(_classNames, \"is-narrow\", narrow), _classNames), rest.className);\n  return React.createElement(Generic, Object.assign({\n    ref: ref\n  }, rest));\n}, {\n  as: \"div\"\n}), {\n  Body: FieldBody,\n  Label: FieldLabel\n});\nField.displayName = \"Field\";\nField.propTypes = {\n  align: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  expanded: PropTypes.bool,\n  horizontal: PropTypes.bool,\n  kind: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  multiline: PropTypes.bool,\n  narrow: PropTypes.bool\n};","map":null,"metadata":{},"sourceType":"module"}