{"ast":null,"code":"import _defineProperty from \"/Users/jordanmitsutakanishina/Documents/GitHub/QuickDoc_Travis/quick_doc/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"/Users/jordanmitsutakanishina/Documents/GitHub/QuickDoc_Travis/quick_doc/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport * as tslib_1 from \"tslib\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { makePropTypesFactory, makeValidatingTransformFactory } from \"./factory\";\nexport var makePropTypes = makePropTypesFactory(function (vars) {\n  return {\n    tooltip: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    tooltipActive: PropTypes.bool,\n    tooltipColor: PropTypes.oneOf(vars.colors),\n    tooltipMultiline: PropTypes.bool,\n    tooltipPosition: PropTypes.oneOf(vars.tooltipPositions),\n    tooltipResponsive: PropTypes.objectOf(PropTypes.oneOf(vars.tooltipPositions))\n  };\n});\nexport var transform = function transform(props) {\n  var _ref;\n\n  var className = props.className,\n      tooltip = props.tooltip,\n      tooltipActive = props.tooltipActive,\n      tooltipColor = props.tooltipColor,\n      tooltipMultiline = props.tooltipMultiline,\n      tooltipPosition = props.tooltipPosition,\n      _props$tooltipRespons = props.tooltipResponsive,\n      tooltipResponsive = _props$tooltipRespons === void 0 ? {} : _props$tooltipRespons,\n      rest = tslib_1.__rest(props, [\"className\", \"tooltip\", \"tooltipActive\", \"tooltipColor\", \"tooltipMultiline\", \"tooltipPosition\", \"tooltipResponsive\"]);\n\n  return Object.assign({\n    className: classNames.apply(void 0, [(_ref = {\n      \"is-tooltip-active\": tooltipActive\n    }, _defineProperty(_ref, \"is-tooltip-\".concat(tooltipColor), tooltipColor), _defineProperty(_ref, \"is-tooltip-multiline\", tooltipMultiline), _defineProperty(_ref, \"is-tooltip-\".concat(tooltipPosition), tooltipPosition), _defineProperty(_ref, \"tooltip\", tooltip), _ref)].concat(_toConsumableArray(Object.keys(tooltipResponsive).map(function (breakpoint) {\n      return \"is-tooltip-\".concat(tooltipResponsive[breakpoint], \"-\").concat(breakpoint);\n    })), [className]))\n  }, tooltip !== undefined ? {\n    \"data-tooltip\": tooltip\n  } : {}, rest);\n};\nexport var makeValidatingTransform = makeValidatingTransformFactory(makePropTypes, transform);","map":null,"metadata":{},"sourceType":"module"}