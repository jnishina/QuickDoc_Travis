{"ast":null,"code":"import _defineProperty from \"/Users/jordanmitsutakanishina/Documents/GitHub/QuickDoc_Travis/quick_doc/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport * as tslib_1 from \"tslib\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { DEFAULTS } from \"../../base/helpers/variables\";\nexport var COLUMN_GROUP_DEFAULTS = {\n  gapSizes: [0, 1, 2, 3, 4, 5, 6, 7, 8]\n};\nexport var ColumnGroup = forwardRefAs(function (_a, ref) {\n  var _classNames2;\n\n  var className = _a.className,\n      breakpoint = _a.breakpoint,\n      centered = _a.centered,\n      desktop = _a.desktop,\n      fullhd = _a.fullhd,\n      gapless = _a.gapless,\n      gapSize = _a.gapSize,\n      mobile = _a.mobile,\n      multiline = _a.multiline,\n      tablet = _a.tablet,\n      widescreen = _a.widescreen,\n      touch = _a.touch,\n      vcentered = _a.vcentered,\n      rest = tslib_1.__rest(_a, [\"className\", \"breakpoint\", \"centered\", \"desktop\", \"fullhd\", \"gapless\", \"gapSize\", \"mobile\", \"multiline\", \"tablet\", \"widescreen\", \"touch\", \"vcentered\"]);\n\n  var breakpoints = {\n    desktop: desktop,\n    fullhd: fullhd,\n    mobile: mobile,\n    tablet: tablet,\n    touch: touch,\n    widescreen: widescreen\n  };\n  var gapSizeClassNames = classNames(_defineProperty({}, \"is-\".concat(gapSize), typeof gapSize === \"number\"), Object.keys(breakpoints).map(function (key) {\n    var value = breakpoints[key];\n    return value === undefined ? {} : _defineProperty({}, \"is-\".concat(value.gapSize, \"-\").concat(key), value.gapSize !== undefined);\n  }).reduce(function (acc, cv) {\n    return Object.assign({}, acc, cv);\n  }, {}));\n  return React.createElement(Generic, Object.assign({\n    className: classNames(\"columns\", (_classNames2 = {}, _defineProperty(_classNames2, \"is-\".concat(breakpoint), breakpoint), _defineProperty(_classNames2, \"is-centered\", centered), _defineProperty(_classNames2, \"is-gapless\", gapless), _defineProperty(_classNames2, \"is-multiline\", multiline), _defineProperty(_classNames2, \"is-variable \", gapSizeClassNames !== \"\"), _defineProperty(_classNames2, \"is-vcentered\", vcentered), _classNames2), gapSizeClassNames, className),\n    ref: ref\n  }, rest));\n}, {\n  as: \"div\"\n});\nColumnGroup.displayName = \"Column.Group\";\nvar ColumnGroupBreakpointPropTypes = {\n  gapSize: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nColumnGroup.propTypes = Object.assign({}, DEFAULTS.breakpoints.map(function (breakpoint) {\n  return _defineProperty({}, breakpoint, PropTypes.shape(ColumnGroupBreakpointPropTypes));\n}).reduce(function (acc, cv) {\n  return Object.assign({}, acc, cv);\n}, {}), ColumnGroupBreakpointPropTypes, {\n  breakpoint: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  centered: PropTypes.bool,\n  gapless: PropTypes.bool,\n  multiline: PropTypes.bool,\n  vcentered: PropTypes.bool\n});","map":null,"metadata":{},"sourceType":"module"}