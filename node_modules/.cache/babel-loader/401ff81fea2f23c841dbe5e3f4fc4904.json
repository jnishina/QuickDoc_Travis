{"ast":null,"code":"import _defineProperty from \"/Users/jordanmitsutakanishina/Documents/GitHub/QuickDoc_Travis/quick_doc/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport * as tslib_1 from \"tslib\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { makePropTypesFactory, makeValidatingTransformFactory } from \"./factory\";\nexport var makePropTypes = makePropTypesFactory(function (vars) {\n  return {\n    badge: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    badgeColor: PropTypes.oneOf(vars.colors),\n    badgeOutlined: PropTypes.bool,\n    badgeRounded: PropTypes.bool,\n    badgeSize: PropTypes.oneOf(vars.badgeSizes)\n  };\n});\nexport var transform = function transform(props) {\n  var _classNames;\n\n  var badge = props.badge,\n      badgeColor = props.badgeColor,\n      badgeOutlined = props.badgeOutlined,\n      badgeRounded = props.badgeRounded,\n      badgeSize = props.badgeSize,\n      className = props.className,\n      rest = tslib_1.__rest(props, [\"badge\", \"badgeColor\", \"badgeOutlined\", \"badgeRounded\", \"badgeSize\", \"className\"]);\n\n  return Object.assign({\n    className: classNames((_classNames = {\n      badge: badge\n    }, _defineProperty(_classNames, \"has-badge-\".concat(badgeColor), badgeColor), _defineProperty(_classNames, \"has-badge-outlined\", badgeOutlined), _defineProperty(_classNames, \"has-badge-rounded\", badgeRounded), _defineProperty(_classNames, \"has-badge-\".concat(badgeSize), badgeSize), _classNames), className)\n  }, badge !== undefined ? {\n    \"data-badge\": badge\n  } : {}, rest);\n};\nexport var makeValidatingTransform = makeValidatingTransformFactory(makePropTypes, transform);","map":null,"metadata":{},"sourceType":"module"}